
func MakeLakyForestMap(rand &XS32Rand) PatternMap<bool> {
  considerCornersAdjacent = true;
  map_0 = MakeCircle(&rand, make_pentagon_9_pattern(), considerCornersAdjacent);
  map_1 = CellularAutomata(considerCornersAdjacent, &rand, &map_0);
  map_2 = CellularAutomata(considerCornersAdjacent, &rand, &map_1);
  //map_3 = CellularAutomata(considerCornersAdjacent, &rand, &map_2);
  
  map_4 = PatternMap<bool>(make_pentagon_9_pattern());
  foreach [loc, walkable] in map_2.tiles {
    if walkable {
      map_4.tiles.add(loc, true);
    }
  }

  ConnectIslands(&rand, &map_4, 2);

  Trim(&map_4);
  FillTinyHoles(&map_4);

  //holes =
  //    FindLargeHoles(
  //        map_0.pattern,
  //        &map_0.tiles.KeysIter()&.HashSet(LocationHasher(), LocationEquator()),
  //        { not map_4.tiles.ContainsKey(_) });

  foreach [loc, unused] in map_0.tiles {
    if not map_4.tiles.ContainsKey(loc) {
      map_4.tiles.add(loc, false);
    }
  }

  ret map_4;
}
